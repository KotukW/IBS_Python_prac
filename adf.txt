Давай сначала
Реализация API для хранения и управления данными
Напишите API для работы с "to-do" списком. Реализуйте следующие операции: добавление
задач(PUT) "/tasks", удаление задачи(DELETE) "/tasks/<task_id>" , получение списка задач(GET) "/
tasks" , обновление (POST) "/tasks/<task_id>".
Необходимо использовать pydantic для валидации входных данных. Для хранения и манипуляции
данных можно использовать память приложения/sqlite/PostgreSQL/файл на стороне приложения и
т.д.

Пример списка с задачами
[{'task': 'Дописать код для упражнения 1.2', 'status': True},
 {'task': 'сходить покушать', 'status': False}]

Тест кейсы добавление задачи:
curl -X POST "http://127.0.0.1:8000/tasks" -H "Content-Type: application/json" -d "[{\"task\": \"Дописать код для упражнения 1.2\",\"status\": false},{\"task\": \"сходить покушать\", \"status\": false}]"

curl -X POST "http://127.0.0.1:8000/tasks" -H "Content-Type: application/json" -d "[{\"task\": \"Принять таблетки\",\"status\": false}]"

curl -X POST "http://127.0.0.1:8000/tasks" -H "Content-Type: application/json" -d "[{\"status\": false}]"

curl -X POST "http://127.0.0.1:8000/tasks" -H "Content-Type: application/json" -d "[{\"task\": \"Принять таблетки\",\"status\": \"неудачно\"}]"
Input
 [{'task': 'Дописать код для упражнения
1.2','status': False},
{'task': 'сходить покушать', 'status': False}]
Output
status code 200
[{'task': 'Дописать код для упражнения 1.2','status':
False, task_id: 1},
{'task': 'сходить покушать', 'status': False, 'task_id':
2}]

Input
 [{'task': 'Принять таблетки','status': False}] 
Output
status code 200
[{'task': 'Принять таблетки','status': False, 'task_id':
3}]

Input
[{'status': False}] 
Output
status code 422

Input
 [{'task': 'Принять таблетки','status': 'неудачно'}] 
Output
 status code 422

Тест кейсы удаление задачи:
Input
task_id: 1 
Output
status code 200

Input
task_id: 5 
Output
status code 404
task not found

Input
task_id: "пять" 
Output
status code 424

Тест кейсы обновления задачи:
Input 
task_id: 1
{'task': 'Дописать код для упражнения
1.3','status': True}
Output
status code 200
{'task': 'Дописать код для упражнения 1.3','status':
True, "task_id": 1}

Input
task_id: 5
{'task': 'Дописать код для упражнения
1.3','status': True}
Output
status code 404
task not found

Input
 task_id: 1
{'task': 'Дописать код для упражнения
1.3','status': "Выполнено"}
Output
status code 424

Тест кейсы получения задачи:
Input
task_id: 1
Output
status code 200
{'task': 'Дописать код для упражнения 1.3','status':
True, "task_id": 1}

Input
task_id: 5 
Output
status code 404
task not found

Усовершенствуйте решение предыдущей задачи.
Используйте PostgreSQL для хранения данных и sqlalchemy для работы с PostgreSQL